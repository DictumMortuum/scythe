{"version":3,"sources":["scythe/img.jpg","kemet/img.jpg","Game.js","Links.js","Bar.js","Template.js","scythe/components/averageWinningPoints.js","scythe/components/winsByBoard.js","scythe/components/winsByCombination.js","scythe/components/winsByCombination2.js","scythe/components/winsByCountry.js","scythe/components/winsByObjectives.js","scythe/components/winsByRounds.js","scythe/components/winsByPlayer.js","scythe/components/winsByStars.js","Pie.js","scythe/components/countryFrequency.js","scythe/components/boardFrequency.js","scythe/components/sweetspot.js","scythe/components/resolution.js","scythe/components/passive.js","scythe/components/aggressive.js","scythe/components/generator.js","scythe/analysis.js","scythe/Charts.js","kemet/score.js","kemet/analysis.js","kemet/components/standings.js","kemet/components/tilesByVP.js","kemet/components/tilesByPosition.js","kemet/Charts.js","index.js"],"names":["module","exports","__webpack_require__","p","PersistentDrawerLeft","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","theme","basename","links","content","react_default","a","createElement","BrowserRouter","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","contentShift","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","Links","handleClick","title","charts","List_default","component","subheader","ListItem_default","button","ListItemText_default","secondary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","map","_ref","path","text","Link","key","to","style","textDecoration","primary","dflt","stackBars","axisY","labelInterpolationFnc","value","Number","isInteger","low","listener","data","type","element","attr","s","series","length","seriesIndex","animate","stroke-width","begin","dur","from","fill","Bar","_props$data","total","sample","rest","objectWithoutProperties","_props$options","options","_props$draw","draw","paragraph","dist_default","Template","Filter","Reduce","Init","_ref$labels","labels","temp","filter","reduce","averageWinningPoints","players","stats","incrementalAverage","common","acc","_ref3","winner","points","indexOf","ia","add","_ref2","undefined","graph","winsByBoard","boards","board","b","winsByCombination","base","combinations","d","country","c","winsByCombination2","countries","winsByCountry","winsByObjectives","objectives","forEach","o","winsByRounds","rounds","_rounds","r","winsByPlayer","winsByStars","Array","_","i","Pie","countryFrequency","relativeFrequency","x","boardFrequency","high","sweetspot","percentile","max_points","parseInt","slice","percentileRounds","toConsumableArray","reverse","percentilePoints","percentileObjectives","round_stats","point_stats","objective_stats","resolution","resolutions","passive","passives","j","aggressive","aggressives","container","_ref$winscutoff","winscutoff","_ref$filters","filters","_ref$playernumber","playernumber","info","arr","push","Math","random","sort","hashmap","hash","Combinatorics","bigCombination","col","slicedToArray","retval","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Generator","game","games","handleFilters","event","target","handlePlayers","handleCutoff","handleSubmit","console","log","handleNext","_this$state","Card_default","CardContent_default","card","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","MenuItem_default","multiple","input","Input_default","id","renderValue","selected","chips","Chip_default","label","chip","name","CardActions_default","Button_default","result","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","flexWrap","margin","minWidth","maxWidth","noLabel","marginTop","minHeight","unique","Set","collection","f","apply","l","discrete","distinct","cols","y","analysis","absoluteFrequency","modifier","wins","frequencies","windgambit","generator","countryCombination","Country","WinsByCombination","boardCombination","Board","WinsByCombination2","ScytheLinks","src_Links","ScytheContent","Route","exact","transform","player","vp","battle","flatten","kemet_analysis","order","setup","_ref4","player1","total1","battle1","player2","total2","battle2","score","_hash$player","tiles","json","t","tilesToArray","standings","tilesByVP","colored_tiles","tilesByPosition","colors","Tiles","TilesByVP","TilesByPosition","KemetLinks","KemetContent","height","ReactDOM","render","Grid_default","justify","item","xs","src","ScytheImg","alt","KemetImg","Game","Charts_ScytheLinks","Charts_ScytheContent","Charts_KemetLinks","Charts_KemetContent","document","getElementById"],"mappings":"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","file":"static/js/main.8afb9f83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.5f8946f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.4f228389.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme, basename, links, content } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Router basename={basename}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                {basename}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={this.handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n            <Divider />\n            {links}\n          </Drawer>\n          <main\n            className={classNames(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            {content}\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Link } from \"react-router-dom\";\n\nclass Links extends React.Component {\n  state = {\n    open: this.props.open || false\n  };\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const {title, charts} = this.props;\n\n    return (\n      <List\n        component=\"nav\"\n        subheader={\n          <ListItem onClick={this.handleClick} button>\n            <ListItemText secondary={<b>{title}</b>} />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n        }\n      >\n      <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n        {charts.map(({path, text}) => (\n          <Link key={path} to={path} style={{ textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </Collapse>\n      </List>\n    );\n  };\n};\n\nexport default Links;\n","import React from 'react';\nimport Chartist from 'react-chartist';\nimport Typography from '@material-ui/core/Typography';\n\nconst dflt = {\n  stackBars: true,\n  axisY: {\n    labelInterpolationFnc: function (value) {\n      return Number.isInteger(value) ? value : null;\n    }\n  },\n  low: 0\n};\n\nconst listener = (data) => {\n  if (data.type === 'bar') {\n    data.element.attr({\n      style: 'stroke-width: 0px'\n    });\n\n    for (let s = 0; s < data.series.length; ++s) {\n      if (data.seriesIndex === s) {\n        data.element.animate({\n          'stroke-width': {\n            //begin: s * 500,\n            begin: 0,\n            dur: 0.5,\n            from: 0,\n            to: 40,\n            fill: 'freeze'\n          }\n        }, false);\n      }\n    }\n  }\n}\n\nexport default props => {\n  const {data: {total, sample, ...rest}, className, options = {}, draw = listener} = props;\n\n  return (\n    <div>\n      <Typography paragraph>\n        <b>Sample size: {sample} / {total}</b>\n      </Typography>\n      <Chartist\n        data={rest}\n        options={{...dflt, ...options}}\n        type={'Bar'}\n        className={className}\n        listener={{'draw': draw}}\n      />\n    </div>\n  );\n};\n","export default ({Filter, Reduce, Init, labels = [], data}) => {\n  let temp = data.filter(Filter);\n\n  return {\n    labels,\n    'series': temp.reduce(Reduce, Init),\n    'total': data.length,\n    'sample': temp.length\n  }\n};\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({winner, points}) => winner !== undefined && points !== undefined;\n  \n  const Reduce = (acc, {winner, points}) => {\n    let p = players.indexOf(winner);\n    let ia = stats[p];\n    acc[p][p] = ia.add(points);\n    return acc;\n  }\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","\nimport React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, boards}) => {\n  const Filter = ({winner, board}) => winner !== undefined && board !== undefined;\n\n  const Reduce = (acc, {board, winner}) => {\n    let b = boards.indexOf(board);\n    let p = players.indexOf(winner);\n    acc[p][b]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => boards.map(() => 0));\n\n  return common({\n    'labels': boards,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = base => ({data, players, boards}) => {\n  const combinations = boards.map(d => base + ' ' + d);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country === base && board !== undefined;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = base => ({data, players, countries}) => {\n  const combinations = countries.map(d => d + ' ' + base);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country !== undefined && board === base;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, countries}) => {\n  const Filter = ({winner, country}) => winner !== undefined && country !== undefined;\n\n  const Reduce = (acc, {country, winner}) => {\n    let c = countries.indexOf(country);\n    let p = players.indexOf(winner);\n    acc[p][c]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => countries.map(() => 0));\n\n  return common({\n    'labels': countries,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, objectives}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives: _objectives}) => {\n    _objectives.forEach(d => {\n      let o = objectives.indexOf(d);\n      let p = players.indexOf(winner);\n      acc[p][o]++;\n    });\n  \n    return acc;\n  };\n  \n  const Init = players.map(() => objectives.map(() => 0));\n\n  return common({\n    'labels': objectives,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, rounds}) => {\n  const Filter = ({winner, rounds}) => winner !== undefined && rounds !== undefined;\n\n  const Reduce = (acc, {rounds: _rounds, winner}) => {\n    let r = rounds.indexOf(_rounds);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => rounds.map(() => 0));\n\n  return common({\n    'labels': rounds,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner}) => winner !== undefined;\n\n  const Reduce = (acc, {winner}) => {\n    let p = players.indexOf(winner);\n    acc[p][p]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives}) => {\n    let o = objectives.length - 1;\n    let p = players.indexOf(winner);\n    acc[p][o]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => Array(6).fill(0));\n\n  return common({\n    'labels': Array(6).fill(0).map((_, i) => i + 1),\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from 'react-chartist';\n\nexport default ({data, className}) => (\n  <Chartist data={data} type={'Pie'} className={className} />\n);\n","import React from 'react';\nimport Chartist from '../../Pie';\n\nconst graph = ({data, countries, relativeFrequency}) => ({\n  'series': relativeFrequency(countries)(data.map(x => x.country)),\n  'labels': countries\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave countries'} />);\n","import React from 'react';\nimport Chartist from '../../Pie';\n\nconst graph = ({data, boards, relativeFrequency}) => ({\n  'series': relativeFrequency(boards)(data.map(x => x.board)),\n  'labels': boards\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave'} />);\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Typography from '@material-ui/core/Typography';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, rounds: r, points: p, percentile}) => {\n\n  const max_points = parseInt(p.slice(-1)) + 1;\n\n  const percentileRounds = [...Array(r[0]).fill(0), ...percentile(r).reverse()];\n  const percentilePoints = percentile(Array(max_points));\n  const percentileObjectives = [0, ...percentile(Array(6)).reverse()];\n\n  const round_stats = players.map(() => incrementalAverage());\n  const point_stats = players.map(() => incrementalAverage());\n  const objective_stats = players.map(() => incrementalAverage());\n\n  const Filter = ({\n    winner,\n    points,\n    rounds,\n    objectives\n  }) => winner !== undefined && (points !== undefined || rounds !== undefined || objectives !== undefined);\n\n  const Reduce = (acc, {winner, points, rounds, objectives}) => {\n    let p = players.indexOf(winner);\n\n    if (rounds !== undefined) {\n      acc[0][p] = round_stats[p].add(percentileRounds[rounds]);\n    }\n\n    if (points !== undefined) {\n      acc[1][p] = point_stats[p].add(percentilePoints[points]);\n    }\n\n    if (objectives !== undefined) {\n      acc[2][p] = objective_stats[p].add(percentileObjectives[objectives.length]);\n    }\n\n    return acc;\n  };\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init: players.map(() => players.map(() => 0)),\n    data\n  });\n};\n\nconst options = {\n  stackBars: false,\n  high: 100\n};\n\nexport default props => (\n  <div>\n    <Chartist\n      data={graph(props)}\n      options={options}\n      draw={() => 1}\n      className={\"ct-octave players\"} \n    />\n    <Typography paragraph>\n      <b>1st bar: round sweetspot.</b> The higher the score, the earlier does this player end the game.\n    </Typography>\n    <Typography paragraph>\n      <b>2nd bar: points sweetspot.</b> The higher the score, the more the player scores on average.\n    </Typography>\n    <Typography paragraph>\n      <b>3rd bar: objectives sweetspot.</b> The higher the score, the more time this player wins with less than 6 objectives.\n    </Typography>\n  </div>\n);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, resolutions}) => {\n\n  const Reduce = (acc, {winner, resolution}) => {\n    let r = resolutions.indexOf(resolution);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  };\n\n  return common({\n    'labels': resolutions,\n    Reduce,\n    Filter: ({winner, resolution}) => winner !== undefined && resolution !== undefined,\n    Init: players.map(() => resolutions.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, passives}) => {\n\n  const Reduce = (acc, {winner, passive}) => {\n    let j = passives.indexOf(passive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': passives,\n    Reduce,\n    Filter: ({winner, passive}) => winner !== undefined && passive !== undefined,\n    Init: players.map(() => passives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, aggressives}) => {\n\n  const Reduce = (acc, {winner, aggressive}) => {\n    let j = aggressives.indexOf(aggressive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': aggressives,\n    Reduce,\n    Filter: ({winner, aggressive}) => winner !== undefined && aggressive !== undefined,\n    Init: players.map(() => aggressives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport TableRow from '@material-ui/core/TableRow';\nimport Combinatorics from 'js-combinatorics';\n\nconst shuffle = arr => arr.map(a => [Math.random(), a]).sort((a, b) => a[0] - b[0]).map(a => a[1]);\n\nconst container = ({boards, countries, data, winscutoff = 1, filters = [], playernumber = 4}) => {\n\n  const info = data.filter(d => d.board !== undefined && d.country !== undefined);\n\n  const combinations = (() => {\n    let temp = [];\n  \n    countries.forEach(country => {\n      boards.forEach(board => {\n        let n = info.filter(d => board === d.board && country === d.country).length;\n        \n        if (n <= winscutoff) {\n          temp.push([board, country]);\n        }\n      });\n    });\n\n    return shuffle(temp).slice(0, 30);\n  })();\n  \n  const hashmap = (() => {\n    let hash = {};\n  \n    [...boards, ...countries].forEach(c => {\n      hash[c] = 0;\n    });\n  \n    return hash;\n  })();\n\n  const impossible = col => {\n    let hash = {...hashmap};\n  \n    col.forEach(([board, country]) => {\n      hash[board]++;\n      hash[country]++;\n    });\n\n    for (let key in hash) {\n      if (hash[key] > 1) {\n        return 0;\n      }\n    }\n\n    let retval = 1;\n\n    filters.forEach(key => {\n      if (hash[key] === 0) {\n        retval = 0;\n      }\n    });\n\n    return retval;\n  };\n\n  return Combinatorics.bigCombination(combinations, playernumber).filter(impossible);\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  result: {\n    marginTop: theme.spacing.unit * 3,\n  }, \n  card: {\n    minHeight: 100\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass Generator extends React.Component {\n  state = {\n    filters: [],\n    total: \"\",\n    i: 0,\n    game: [],\n    games: {},\n    playernumber: 3,\n    winscutoff: 1\n  };\n\n  handleFilters = event => {\n    this.setState({ filters: event.target.value });\n  };\n\n  handlePlayers = event => {\n    this.setState({ playernumber: event.target.value });\n  };\n\n  handleCutoff = event => {\n    this.setState({ winscutoff: event.target.value });\n  };\n\n  handleSubmit = () => {\n    const games = container({...this.state, ...this.props});\n\n    console.log(games);\n\n    if (games.length !== 0) {\n      this.setState({\n        i: 0,\n        games,\n        total: \"Found \" + games.length + \" combinations.\",\n        game: games[0]\n      });\n    } else {\n      this.setState({\n        total: \"There are no combinations with this setup. Please try again.\"\n      });\n    }\n  };\n\n  handleNext = () => {\n    const {i, games} = this.state;\n\n    this.setState({\n      game: games[i],\n      i: i + 1,\n    });\n  }\n\n  render() {\n    const {classes, countries, boards} = this.props;\n\n    return (\n      <div>\n        <Card>\n          <CardContent className={classes.card}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"players-simple\">Player #</InputLabel>\n              <Select value={this.state.playernumber} onChange={this.handlePlayers}>\n                {[2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} players</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"winscutoff-simple\">Maximum wins</InputLabel>\n              <Select value={this.state.winscutoff} onChange={this.handleCutoff}>\n                {[0, 1, 2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} wins</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-multiple-chip\">Must Include</InputLabel>\n              <Select\n                multiple\n                value={this.state.filters}\n                onChange={this.handleFilters}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {selected.map(value => (\n                      <Chip key={value} label={value} className={classes.chip} />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {[...countries, ...boards].map(name => (\n                  <MenuItem key={name} value={name}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Generate</Button>\n            <Button variant=\"outlined\" onClick={this.handleNext}>Next</Button>\n            <Typography variant=\"h5\" component=\"h2\">\n              {this.state.total}\n            </Typography>\n          </CardActions>\n        </Card>\n        <div className={classes.result}>\n          <p>Using the generator: TL;DR - Select the number of players and press \"generate\".</p>\n          <h3>Maximum Wins</h3>\n          <p>The generator uses the [board, country] combinations that have zero recorded wins to generate a game.</p>\n          <p>However, those choices are not always enough to generate a game. Thus, if you can't generate a game, you can use this dropdown to also include combinations with more than 0 recorded wins.</p>\n          <h3>Must Include</h3>\n          <p>Use this dropdown to select boards and/or countries that you absolutely want in the results (e.g. if a player wants to play a specific country)</p>\n          <h3>Next</h3>\n          <p>The generator will inform you of how many combinations it has generated. If you don't like a particular combination, use the next button to see the next one.</p>\n        </div>\n        <Paper className={classes.result}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Board</TableCell>\n                <TableCell>Country</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.game.map(c => (\n                <TableRow key={c[0] + c[1]}>\n                  <TableCell>{c[0]}</TableCell>\n                  <TableCell>{c[1]}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nGenerator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Generator);\n","import data from './plays.json';\n\n/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n}\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\n/*\n * Returns an array containing the relative frequency of cols.\n */\nconst relativeFrequency = cols => data => cols.map(x => data.filter(y => x === y).length);\n\n/*\n * Returns an array containing the absolute frequency of cols.\n */\nconst absoluteFrequency = cols => data => relativeFrequency(cols)(data).map(x => x / data.length);\n\n/*\n * percentile([1,2,3,4]) = [ 25, 33.333333333333336, 50, 100 ]\n */\nconst percentile = col => {\n  let l = col.length;\n  let modifier = x => x / l * 100;\n  return Array(l).fill(1).map((x, i) => modifier(x + i));\n}\n\nexport default {\n  unique,\n  countries: collection(d => d.country).sort(),\n  players: collection(d => d.winner),\n  boards: collection(d => d.board),\n  objectives: collection(d => d.objectives).sort(),\n  data,\n  rounds: discrete(collection(d => d.rounds)),\n  points: discrete(collection(d => d.points)),\n  passives: collection(d => d.passive),\n  aggressives: collection(d => d.aggressive),\n  resolutions: collection(d => d.resolution),\n  relativeFrequency,\n  absoluteFrequency,\n  percentile\n};\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from \"react-router-dom\";\nimport AverageWinningPoints from './components/averageWinningPoints';\nimport WinsByBoard from './components/winsByBoard';\nimport WinsByCombination from './components/winsByCombination';\nimport WinsByCombination2 from './components/winsByCombination2';\nimport WinsByCountry from './components/winsByCountry';\nimport WinsByObjectives from './components/winsByObjectives';\nimport WinsByRounds from './components/winsByRounds';\nimport WinsByPlayer from './components/winsByPlayer';\nimport WinsByStars from './components/winsByStars';\nimport CountryFrequency from './components/countryFrequency';\nimport BoardFrequency from './components/boardFrequency';\nimport Sweetspot from './components/sweetspot';\nimport Resolution from './components/resolution';\nimport Passive from './components/passive';\nimport Aggressive from './components/aggressive';\nimport Generator from './components/generator';\nimport common from './analysis';\nimport ScytheImg from './img.jpg';\n\nconst {countries, boards} = common;\n\nconst wins = [{\n  'text': 'Wins by player',\n  'path': '/',\n  'component': () => <WinsByPlayer {...common} />\n}, {\n  'text': 'Average winning points',\n  'path': '/average/',\n  'component': () => <AverageWinningPoints {...common} />\n}, {\n  'text': 'Player sweetspot',\n  'path': '/sweetspot/',\n  'component': () => <Sweetspot {...common} />\n}, {\n  'text': 'Wins by country',\n  'path': '/country/',\n  'component': () => <WinsByCountry {...common} />\n}, {\n  'text': 'Wins by objectives',\n  'path': '/objectives/',\n  'component': () => <WinsByObjectives {...common} />\n}, {\n  'text': 'Wins by rounds',\n  'path': '/rounds/',\n  'component': () => <WinsByRounds {...common} />\n}, {\n  'text': 'Wins by board',\n  'path': '/board/',\n  'component': () => <WinsByBoard {...common} />\n}, {\n  'text': 'Wins by stars',\n  'path': '/stars/',\n  'component': () => <WinsByStars {...common} />\n}];\n\nconst frequencies = [{\n  'text': 'Country frequency',\n  'path': '/country/frequency/',\n  'component': () => <CountryFrequency {...common} />\n}, {\n  'text': 'Board frequency',\n  'path': '/board/frequency/',\n  'component': () => <BoardFrequency {...common} />\n}];\n\nconst windgambit = [{\n  'text': 'Resolution tiles',\n  'path': '/resolution/',\n  'component': () => <Resolution {...common} />\n}, {\n  'text': 'Aggressive tiles',\n  'path': '/windgambit/aggressive/',\n  'component': () => <Aggressive {...common} />\n}, {\n  'text': 'Passive tiles',\n  'path': '/windgambit/passive/',\n  'component': () => <Passive {...common} />\n}];\n\nconst generator = [{\n  'text': 'Generator',\n  'path': '/generator/',\n  'component': () => <Generator {...common} />\n}];\n\nconst countryCombination = countries.map(c => {\n  const Country = WinsByCombination(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/' + c + '/',\n    'component': () => <Country {...common} />\n  };\n});\n\nconst boardCombination = boards.map(c => {\n  const Board = WinsByCombination2(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/' + c + '/',\n    'component': () => <Board {...common} />\n  };\n});\n\nconst ScytheLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={windgambit} title={\"Wind Gambit\"} key={\"Wind Gambit\"} />\n    <Divider />\n    <Links charts={frequencies} title={\"Frequencies\"} key={\"Frequencies\"} />\n    <Divider />\n    <Links charts={countryCombination} title={\"Country Combinations\"} key={\"Country combinations\"} />\n    <Divider />\n    <Links charts={boardCombination} title={\"Board Combinations\"} key={\"Board combinations\"} />\n    <Divider />\n    <Links charts={generator} title={\"Tools\"} key={\"Generator\"} />\n  </div>\n);\n\nconst ScytheContent = () => (\n  [...wins, ...frequencies, ...windgambit, ...countryCombination, ...boardCombination, ...generator].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {ScytheContent, ScytheLinks, ScytheImg};","const f = order => (\n  {player: player1, total: total1, battle: battle1},\n  {player: player2, total: total2, battle: battle2}\n) => {\n  if (total1 > total2) {\n    return -1;\n  } else if (total1 < total2) {\n    return 1;\n  } else {\n    if (battle1 > battle2) {\n      return -1;\n    } else if (battle1 < battle2) {\n      return 1;\n    } else {\n      let a = order.indexOf(player1);\n      let b = order.indexOf(player2);\n\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      }\n    }\n  }\n}\n\nconst transform = ({player, vp}) => {\n  let total = 0;\n  let battle = 0;\n\n  for (let type in vp) {\n    total += vp[type];\n\n    if (type === 'battle') {\n      battle += vp[type]\n    }\n  }\n\n  return {\n    player,\n    total,\n    battle\n  }\n}\n\nexport default ({order, setup}) => setup.map(transform).sort(f(order));\n","import data from './plays.json';\nimport score from './score';\nimport tiles from './tiles.json';\n\n/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n}\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\n/*\n * Returns an array containing the relative frequency of cols.\n */\nconst relativeFrequency = cols => data => cols.map(x => data.filter(y => x === y).length);\n\n/*\n * Returns an array containing the absolute frequency of cols.\n */\nconst absoluteFrequency = cols => data => relativeFrequency(cols)(data).map(x => x / data.length);\n\n/*\n * percentile([1,2,3,4]) = [ 25, 33.333333333333336, 50, 100 ]\n */\nconst percentile = col => {\n  let l = col.length;\n  let modifier = x => x / l * 100;\n  return Array(l).fill(1).map((x, i) => modifier(x + i));\n}\n\nconst addScoreToData = game => {\n  const {setup} = game;\n  const hash = {};\n\n  score(game).forEach(({player, total}, i) => {\n    hash[player] = {};\n    hash[player].position = i;\n    hash[player].score = total;\n  });\n\n  const temp = setup.map(d => {\n    const {player} = d;\n    const {position, score} = hash[player];\n    d.position = position;\n    d.score = score;\n    return d;\n  });\n\n  return {...game, setup: temp};\n};\n\nconst tilesToArray = json => {\n  const temp = [];\n\n  for (let i in tiles) {\n    const t = tiles[i];\n    t.name = i;\n    temp.push(t);\n  }\n\n  return temp;\n};\n\nexport {\n  flatten,\n  unique,\n  relativeFrequency,\n  absoluteFrequency,\n  percentile\n};\n\nexport default {\n  players: unique(flatten(['Dimitris', 'Panagiotis', 'Elena', 'Kostas', ...collection(d => d.order)])),\n  data: data.map(addScoreToData),\n  rounds: discrete([1, ...data.map(d => d.rounds)]),\n  tiles: tilesToArray(tiles)\n};\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n\n  const Filter = ({setup}) => setup !== undefined;\n\n  const Reduce = (acc, {setup}) => {\n\n    setup.forEach(({player, position}) => {\n      let p = players.indexOf(player);\n      acc[position][p]++;\n    });\n\n    return acc;\n  };\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init: Array(5).fill(0).map(() => players.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (\n  <Chartist\n    data={graph(props)}\n    options={{stackBars: false}}\n    draw={() => 1}\n    className={\"ct-octave\"}\n  />\n);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = color => ({ data, players, tiles }) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({ setup }) => setup !== undefined;\n\n  const Reduce = (acc, { setup }) => {\n\n    setup.forEach(({ tiles, score, player }) => {\n      tiles.forEach(t => {\n        let p = players.indexOf(player);\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          let ia = stats[p];\n          acc[p][i] += ia.add(score);\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return common({\n    'labels': colored_tiles,\n    Reduce,\n    Filter,\n    Init: players.map(() => colored_tiles.map(() => 0)),\n    data\n  });\n};\n\nexport default color => props => (\n  <Chartist\n    data={graph(color)(props)}\n    options={{ stackBars: false }}\n    draw={() => 1}\n    className={\"ct-octave players\"}\n  />\n);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = color => ({ data, players, tiles }) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({ setup }) => setup !== undefined;\n\n  const Reduce = (acc, { order, setup }) => {\n\n    setup.forEach(({ tiles, position, player }) => {\n      tiles.forEach(t => {\n        let p = players.indexOf(player);\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          let ia = stats[p];\n          acc[p][i] += ia.add(order.length - position);\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return common({\n    'labels': colored_tiles,\n    Reduce,\n    Filter,\n    Init: players.map(() => colored_tiles.map(() => 0)),\n    data\n  });\n};\n\nexport default color => props => (\n  <Chartist\n    data={graph(color)(props)}\n    options={{ stackBars: false }}\n    draw={() => 1}\n    className={\"ct-octave players\"}\n  />\n);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from \"react-router-dom\";\nimport analysis from \"./analysis\";\nimport KemetImg from './img.jpg';\nimport Standings from \"./components/standings\";\nimport TilesByVP from \"./components/tilesByVP\";\nimport TilesByPosition from './components/tilesByPosition';\n\nconst colors = ['red', 'blue', 'white'];\n\nconst tiles = [\n  ...colors.map(c => {\n    const Tiles = TilesByVP(c);\n\n    return {\n      'text': c + ' tiles by VP',\n      'path': '/tiles/vp/' + c + '/',\n      'component': () => <Tiles {...analysis} />\n    };\n  }),\n  ...colors.map(c => {\n    const Tiles = TilesByPosition(c);\n\n    return {\n      'text': c + ' tiles by position',\n      'path': '/tiles/position/' + c + '/',\n      'component': () => <Tiles {...analysis} />\n    };\n  })\n];\n\nconst wins = [{\n  'text': 'Standings',\n  'path': '/',\n  'component': () => <Standings {...analysis} />\n}];\n\nconst KemetLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={tiles} title={\"Tile Stats\"} key={\"tiles\"} open={true} />\n    <Divider />\n  </div>\n);\n\nconst KemetContent = () => (\n  [...wins, ...tiles].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {KemetContent, KemetLinks, KemetImg};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { ScytheLinks, ScytheContent, ScytheImg } from './scythe/Charts';\nimport { KemetLinks, KemetContent, KemetImg } from './kemet/Charts';\n\nconst Scythe = () => <Game basename=\"stats/scythe\" links={<ScytheLinks />} content={<ScytheContent />} />;\nconst Kemet = () => <Game basename=\"stats/kemet\" links={<KemetLinks />} content={<KemetContent />} />;\n\nconst style = {\n  width: '100%',\n  height: 'auto'\n}\n\nconst Index = () => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n    >\n    <Grid item xs={6}>\n        <Link to=\"/stats/scythe\">\n          <img src={ScytheImg} alt=\"scythe\" style={style} />\n        </Link>\n    </Grid>\n    <Grid item xs={6}>\n        <Link to=\"/stats/kemet\">\n          <img src={KemetImg} alt=\"kemet\" style={style} />\n        </Link>\n    </Grid>\n  </Grid>\n);\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Route path=\"/stats/\" exact component={Index} />\n      <Route path=\"/stats/scythe\" component={Scythe} />\n      <Route path=\"/stats/kemet\" component={Kemet} />\n    </div>\n  </Router>\n, document.getElementById('root'));\n"],"sourceRoot":""}