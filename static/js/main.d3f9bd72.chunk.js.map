{"version":3,"sources":["scythe/img.jpg","kemet/img.jpg","common.js","Game.js","Links.js","Bar.js","Template.js","scythe/components/averageWinningPoints.js","scythe/components/winsByBoard.js","scythe/components/winsByCombination.js","scythe/components/winsByCombination2.js","scythe/components/winsByCountry.js","scythe/components/winsByObjectives.js","scythe/components/winsByRounds.js","scythe/components/winsByPlayer.js","scythe/components/winsByStars.js","Pie.js","scythe/components/countryFrequency.js","scythe/components/boardFrequency.js","scythe/components/sweetspot.js","scythe/components/resolution.js","scythe/components/passive.js","scythe/components/aggressive.js","scythe/components/generator.js","scythe/analysis.js","scythe/Charts.js","kemet/components/config.js","kemet/actions/index.js","kemet/actions/types.js","kemet/components/standings.js","kemet/components/tilesByPicks.js","kemet/components/tilesByVP.js","kemet/components/tilesByPosition.js","kemet/index.js","kemet/reducer/score.js","kemet/reducer/init.js","index.js","kemet/reducer/index.js"],"names":["module","exports","__webpack_require__","p","data","PersistentDrawerLeft","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","theme","basename","links","content","react_default","a","createElement","BrowserRouter","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","contentShift","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","Links","handleClick","title","charts","List_default","component","subheader","ListItem_default","button","ListItemText_default","secondary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","map","_ref","path","text","Link","key","to","style","textDecoration","primary","dflt","stackBars","axisY","labelInterpolationFnc","value","Number","isInteger","low","listener","type","element","attr","s","series","length","seriesIndex","animate","stroke-width","begin","dur","from","fill","Bar","_props$data","total","sample","rest","objectWithoutProperties","_props$options","options","_props$draw","draw","paragraph","dist_default","Template","Filter","Reduce","Init","_ref$labels","labels","temp","filter","reduce","averageWinningPoints","players","stats","incrementalAverage","common","acc","_ref3","winner","points","indexOf","ia","add","_ref2","undefined","graph","winsByBoard","boards","board","b","winsByCombination","base","combinations","d","country","c","winsByCombination2","countries","winsByCountry","winsByObjectives","objectives","forEach","o","winsByRounds","rounds","_rounds","r","winsByPlayer","winsByStars","Array","_","i","Pie","countryFrequency","relativeFrequency","x","boardFrequency","high","sweetspot","percentile","max_points","parseInt","slice","percentileRounds","toConsumableArray","reverse","percentilePoints","percentileObjectives","round_stats","point_stats","objective_stats","resolution","resolutions","passive","passives","j","aggressive","aggressives","container","_ref$winscutoff","winscutoff","_ref$filters","filters","_ref$playernumber","playernumber","info","arr","push","Math","random","sort","hashmap","hash","Combinatorics","bigCombination","col","slicedToArray","retval","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Generator","game","games","handleFilters","event","target","handlePlayers","handleCutoff","handleSubmit","console","log","handleNext","_this$state","Card_default","CardContent_default","card","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","MenuItem_default","multiple","input","Input_default","id","renderValue","selected","chips","Chip_default","label","chip","name","CardActions_default","Button_default","result","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","flexWrap","margin","minWidth","maxWidth","noLabel","marginTop","minHeight","unique","Set","collection","f","apply","l","discrete","distinct","cols","y","analysis","absoluteFrequency","modifier","wins","frequencies","windgambit","generator","countryCombination","Country","WinsByCombination","boardCombination","Board","WinsByCombination2","ScytheLinks","src_Links","ScytheContent","Route","exact","mapDispatchToProps","handleConfig","config","Element","handleChange","perPlayer","checked","FormGroup_default","row","FormControlLabel_default","control","Switch_default","connect","kemetReducer","args","setup","player","tiles","colored_tiles","I","t","score","v","getAverage","colors","tilesByVP","tilesByPosition","tilesByPicks","standings","KemetLinks","components_config","KemetContent","transform","vp","battle","flatten","init","order","_ref4","player1","total1","battle1","player2","total2","battle2","_hash$player","json","tilesToArray","store","createStore","combineReducers","arguments","action","initialState","dispatch","height","ReactDOM","render","es","Grid_default","justify","item","xs","src","ScytheImg","alt","KemetImg","Game","Charts_ScytheLinks","Charts_ScytheContent","kemet_KemetLinks","kemet_KemetContent","document","getElementById"],"mappings":"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","file":"static/js/main.d3f9bd72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.5f8946f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.4f228389.jpg\";","/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = data => f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n};\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\nexport {\n  unique,\n  flatten,\n  collection,\n  discrete\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme, basename, links, content } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Router basename={basename}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                {basename}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={this.handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n            <Divider />\n            {links}\n          </Drawer>\n          <main\n            className={classNames(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            {content}\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Link } from \"react-router-dom\";\n\nclass Links extends React.Component {\n  state = {\n    open: this.props.open || false\n  };\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const {title, charts} = this.props;\n\n    return (\n      <List\n        component=\"nav\"\n        subheader={\n          <ListItem onClick={this.handleClick} button>\n            <ListItemText secondary={<b>{title}</b>} />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n        }\n      >\n      <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n        {charts.map(({path, text}) => (\n          <Link key={path} to={path} style={{ textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </Collapse>\n      </List>\n    );\n  };\n};\n\nexport default Links;\n","import React from 'react';\nimport Chartist from 'react-chartist';\nimport Typography from '@material-ui/core/Typography';\n\nconst dflt = {\n  stackBars: true,\n  axisY: {\n    labelInterpolationFnc: function (value) {\n      return Number.isInteger(value) ? value : null;\n    }\n  },\n  low: 0\n};\n\nconst listener = (data) => {\n  if (data.type === 'bar') {\n    data.element.attr({\n      style: 'stroke-width: 0px'\n    });\n\n    for (let s = 0; s < data.series.length; ++s) {\n      if (data.seriesIndex === s) {\n        data.element.animate({\n          'stroke-width': {\n            //begin: s * 500,\n            begin: 0,\n            dur: 0.5,\n            from: 0,\n            to: 40,\n            fill: 'freeze'\n          }\n        }, false);\n      }\n    }\n  }\n}\n\nexport default props => {\n  const {data: {total, sample, ...rest}, className, options = {}, draw = listener} = props;\n\n  return (\n    <div>\n      <Typography paragraph>\n        <b>Sample size: {sample} / {total}</b>\n      </Typography>\n      <Chartist\n        data={rest}\n        options={{...dflt, ...options}}\n        type={'Bar'}\n        className={className}\n        listener={{'draw': draw}}\n      />\n    </div>\n  );\n};\n","export default ({Filter, Reduce, Init, labels = [], data}) => {\n  let temp = data.filter(Filter);\n\n  return {\n    labels,\n    'series': temp.reduce(Reduce, Init),\n    'total': data.length,\n    'sample': temp.length\n  }\n};\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({winner, points}) => winner !== undefined && points !== undefined;\n  \n  const Reduce = (acc, {winner, points}) => {\n    let p = players.indexOf(winner);\n    let ia = stats[p];\n    acc[p][p] = ia.add(points);\n    return acc;\n  }\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","\nimport React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, boards}) => {\n  const Filter = ({winner, board}) => winner !== undefined && board !== undefined;\n\n  const Reduce = (acc, {board, winner}) => {\n    let b = boards.indexOf(board);\n    let p = players.indexOf(winner);\n    acc[p][b]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => boards.map(() => 0));\n\n  return common({\n    'labels': boards,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = base => ({data, players, boards}) => {\n  const combinations = boards.map(d => base + ' ' + d);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country === base && board !== undefined;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = base => ({data, players, countries}) => {\n  const combinations = countries.map(d => d + ' ' + base);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country !== undefined && board === base;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, countries}) => {\n  const Filter = ({winner, country}) => winner !== undefined && country !== undefined;\n\n  const Reduce = (acc, {country, winner}) => {\n    let c = countries.indexOf(country);\n    let p = players.indexOf(winner);\n    acc[p][c]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => countries.map(() => 0));\n\n  return common({\n    'labels': countries,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, objectives}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives: _objectives}) => {\n    _objectives.forEach(d => {\n      let o = objectives.indexOf(d);\n      let p = players.indexOf(winner);\n      acc[p][o]++;\n    });\n  \n    return acc;\n  };\n  \n  const Init = players.map(() => objectives.map(() => 0));\n\n  return common({\n    'labels': objectives,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, rounds}) => {\n  const Filter = ({winner, rounds}) => winner !== undefined && rounds !== undefined;\n\n  const Reduce = (acc, {rounds: _rounds, winner}) => {\n    let r = rounds.indexOf(_rounds);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => rounds.map(() => 0));\n\n  return common({\n    'labels': rounds,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner}) => winner !== undefined;\n\n  const Reduce = (acc, {winner}) => {\n    let p = players.indexOf(winner);\n    acc[p][p]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives}) => {\n    let o = objectives.length - 1;\n    let p = players.indexOf(winner);\n    acc[p][o]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => Array(6).fill(0));\n\n  return common({\n    'labels': Array(6).fill(0).map((_, i) => i + 1),\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from 'react-chartist';\n\nexport default ({data, className}) => (\n  <Chartist data={data} type={'Pie'} className={className} />\n);\n","import React from 'react';\nimport Chartist from '../../Pie';\n\nconst graph = ({data, countries, relativeFrequency}) => ({\n  'series': relativeFrequency(countries)(data.map(x => x.country)),\n  'labels': countries\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave countries'} />);\n","import React from 'react';\nimport Chartist from '../../Pie';\n\nconst graph = ({data, boards, relativeFrequency}) => ({\n  'series': relativeFrequency(boards)(data.map(x => x.board)),\n  'labels': boards\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave'} />);\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Typography from '@material-ui/core/Typography';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, rounds: r, points: p, percentile}) => {\n\n  const max_points = parseInt(p.slice(-1)) + 1;\n\n  const percentileRounds = [...Array(r[0]).fill(0), ...percentile(r).reverse()];\n  const percentilePoints = percentile(Array(max_points));\n  const percentileObjectives = [0, ...percentile(Array(6)).reverse()];\n\n  const round_stats = players.map(() => incrementalAverage());\n  const point_stats = players.map(() => incrementalAverage());\n  const objective_stats = players.map(() => incrementalAverage());\n\n  const Filter = ({\n    winner,\n    points,\n    rounds,\n    objectives\n  }) => winner !== undefined && (points !== undefined || rounds !== undefined || objectives !== undefined);\n\n  const Reduce = (acc, {winner, points, rounds, objectives}) => {\n    let p = players.indexOf(winner);\n\n    if (rounds !== undefined) {\n      acc[0][p] = round_stats[p].add(percentileRounds[rounds]);\n    }\n\n    if (points !== undefined) {\n      acc[1][p] = point_stats[p].add(percentilePoints[points]);\n    }\n\n    if (objectives !== undefined) {\n      acc[2][p] = objective_stats[p].add(percentileObjectives[objectives.length]);\n    }\n\n    return acc;\n  };\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init: players.map(() => players.map(() => 0)),\n    data\n  });\n};\n\nconst options = {\n  stackBars: false,\n  high: 100\n};\n\nexport default props => (\n  <div>\n    <Chartist\n      data={graph(props)}\n      options={options}\n      draw={() => 1}\n      className={\"ct-octave players\"} \n    />\n    <Typography paragraph>\n      <b>1st bar: round sweetspot.</b> The higher the score, the earlier does this player end the game.\n    </Typography>\n    <Typography paragraph>\n      <b>2nd bar: points sweetspot.</b> The higher the score, the more the player scores on average.\n    </Typography>\n    <Typography paragraph>\n      <b>3rd bar: objectives sweetspot.</b> The higher the score, the more time this player wins with less than 6 objectives.\n    </Typography>\n  </div>\n);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, resolutions}) => {\n\n  const Reduce = (acc, {winner, resolution}) => {\n    let r = resolutions.indexOf(resolution);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  };\n\n  return common({\n    'labels': resolutions,\n    Reduce,\n    Filter: ({winner, resolution}) => winner !== undefined && resolution !== undefined,\n    Init: players.map(() => resolutions.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, passives}) => {\n\n  const Reduce = (acc, {winner, passive}) => {\n    let j = passives.indexOf(passive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': passives,\n    Reduce,\n    Filter: ({winner, passive}) => winner !== undefined && passive !== undefined,\n    Init: players.map(() => passives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport common from '../../Template';\n\nconst graph = ({data, players, aggressives}) => {\n\n  const Reduce = (acc, {winner, aggressive}) => {\n    let j = aggressives.indexOf(aggressive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': aggressives,\n    Reduce,\n    Filter: ({winner, aggressive}) => winner !== undefined && aggressive !== undefined,\n    Init: players.map(() => aggressives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport TableRow from '@material-ui/core/TableRow';\nimport Combinatorics from 'js-combinatorics';\n\nconst shuffle = arr => arr.map(a => [Math.random(), a]).sort((a, b) => a[0] - b[0]).map(a => a[1]);\n\nconst container = ({boards, countries, data, winscutoff = 1, filters = [], playernumber = 4}) => {\n\n  const info = data.filter(d => d.board !== undefined && d.country !== undefined);\n\n  const combinations = (() => {\n    let temp = [];\n  \n    countries.forEach(country => {\n      boards.forEach(board => {\n        let n = info.filter(d => board === d.board && country === d.country).length;\n        \n        if (n <= winscutoff) {\n          temp.push([board, country]);\n        }\n      });\n    });\n\n    return shuffle(temp).slice(0, 30);\n  })();\n  \n  const hashmap = (() => {\n    let hash = {};\n  \n    [...boards, ...countries].forEach(c => {\n      hash[c] = 0;\n    });\n  \n    return hash;\n  })();\n\n  const impossible = col => {\n    let hash = {...hashmap};\n  \n    col.forEach(([board, country]) => {\n      hash[board]++;\n      hash[country]++;\n    });\n\n    for (let key in hash) {\n      if (hash[key] > 1) {\n        return 0;\n      }\n    }\n\n    let retval = 1;\n\n    filters.forEach(key => {\n      if (hash[key] === 0) {\n        retval = 0;\n      }\n    });\n\n    return retval;\n  };\n\n  return Combinatorics.bigCombination(combinations, playernumber).filter(impossible);\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  result: {\n    marginTop: theme.spacing.unit * 3,\n  }, \n  card: {\n    minHeight: 100\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass Generator extends React.Component {\n  state = {\n    filters: [],\n    total: \"\",\n    i: 0,\n    game: [],\n    games: {},\n    playernumber: 3,\n    winscutoff: 1\n  };\n\n  handleFilters = event => {\n    this.setState({ filters: event.target.value });\n  };\n\n  handlePlayers = event => {\n    this.setState({ playernumber: event.target.value });\n  };\n\n  handleCutoff = event => {\n    this.setState({ winscutoff: event.target.value });\n  };\n\n  handleSubmit = () => {\n    const games = container({...this.state, ...this.props});\n\n    console.log(games);\n\n    if (games.length !== 0) {\n      this.setState({\n        i: 0,\n        games,\n        total: \"Found \" + games.length + \" combinations.\",\n        game: games[0]\n      });\n    } else {\n      this.setState({\n        total: \"There are no combinations with this setup. Please try again.\"\n      });\n    }\n  };\n\n  handleNext = () => {\n    const {i, games} = this.state;\n\n    this.setState({\n      game: games[i],\n      i: i + 1,\n    });\n  }\n\n  render() {\n    const {classes, countries, boards} = this.props;\n\n    return (\n      <div>\n        <Card>\n          <CardContent className={classes.card}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"players-simple\">Player #</InputLabel>\n              <Select value={this.state.playernumber} onChange={this.handlePlayers}>\n                {[2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} players</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"winscutoff-simple\">Maximum wins</InputLabel>\n              <Select value={this.state.winscutoff} onChange={this.handleCutoff}>\n                {[0, 1, 2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} wins</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-multiple-chip\">Must Include</InputLabel>\n              <Select\n                multiple\n                value={this.state.filters}\n                onChange={this.handleFilters}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {selected.map(value => (\n                      <Chip key={value} label={value} className={classes.chip} />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {[...countries, ...boards].map(name => (\n                  <MenuItem key={name} value={name}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Generate</Button>\n            <Button variant=\"outlined\" onClick={this.handleNext}>Next</Button>\n            <Typography variant=\"h5\" component=\"h2\">\n              {this.state.total}\n            </Typography>\n          </CardActions>\n        </Card>\n        <div className={classes.result}>\n          <p>Using the generator: TL;DR - Select the number of players and press \"generate\".</p>\n          <h3>Maximum Wins</h3>\n          <p>The generator uses the [board, country] combinations that have zero recorded wins to generate a game.</p>\n          <p>However, those choices are not always enough to generate a game. Thus, if you can't generate a game, you can use this dropdown to also include combinations with more than 0 recorded wins.</p>\n          <h3>Must Include</h3>\n          <p>Use this dropdown to select boards and/or countries that you absolutely want in the results (e.g. if a player wants to play a specific country)</p>\n          <h3>Next</h3>\n          <p>The generator will inform you of how many combinations it has generated. If you don't like a particular combination, use the next button to see the next one.</p>\n        </div>\n        <Paper className={classes.result}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Board</TableCell>\n                <TableCell>Country</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.game.map(c => (\n                <TableRow key={c[0] + c[1]}>\n                  <TableCell>{c[0]}</TableCell>\n                  <TableCell>{c[1]}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nGenerator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Generator);\n","import data from './plays.json';\n\n/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n}\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\n/*\n * Returns an array containing the relative frequency of cols.\n */\nconst relativeFrequency = cols => data => cols.map(x => data.filter(y => x === y).length);\n\n/*\n * Returns an array containing the absolute frequency of cols.\n */\nconst absoluteFrequency = cols => data => relativeFrequency(cols)(data).map(x => x / data.length);\n\n/*\n * percentile([1,2,3,4]) = [ 25, 33.333333333333336, 50, 100 ]\n */\nconst percentile = col => {\n  let l = col.length;\n  let modifier = x => x / l * 100;\n  return Array(l).fill(1).map((x, i) => modifier(x + i));\n}\n\nexport default {\n  unique,\n  countries: collection(d => d.country).sort(),\n  players: collection(d => d.winner),\n  boards: collection(d => d.board),\n  objectives: collection(d => d.objectives).sort(),\n  data,\n  rounds: discrete(collection(d => d.rounds)),\n  points: discrete(collection(d => d.points)),\n  passives: collection(d => d.passive),\n  aggressives: collection(d => d.aggressive),\n  resolutions: collection(d => d.resolution),\n  relativeFrequency,\n  absoluteFrequency,\n  percentile\n};\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from \"react-router-dom\";\nimport AverageWinningPoints from './components/averageWinningPoints';\nimport WinsByBoard from './components/winsByBoard';\nimport WinsByCombination from './components/winsByCombination';\nimport WinsByCombination2 from './components/winsByCombination2';\nimport WinsByCountry from './components/winsByCountry';\nimport WinsByObjectives from './components/winsByObjectives';\nimport WinsByRounds from './components/winsByRounds';\nimport WinsByPlayer from './components/winsByPlayer';\nimport WinsByStars from './components/winsByStars';\nimport CountryFrequency from './components/countryFrequency';\nimport BoardFrequency from './components/boardFrequency';\nimport Sweetspot from './components/sweetspot';\nimport Resolution from './components/resolution';\nimport Passive from './components/passive';\nimport Aggressive from './components/aggressive';\nimport Generator from './components/generator';\nimport common from './analysis';\nimport ScytheImg from './img.jpg';\n\nconst {countries, boards} = common;\n\nconst wins = [{\n  'text': 'Wins by player',\n  'path': '/',\n  'component': () => <WinsByPlayer {...common} />\n}, {\n  'text': 'Average winning points',\n  'path': '/average/',\n  'component': () => <AverageWinningPoints {...common} />\n}, {\n  'text': 'Player sweetspot',\n  'path': '/sweetspot/',\n  'component': () => <Sweetspot {...common} />\n}, {\n  'text': 'Wins by country',\n  'path': '/country/',\n  'component': () => <WinsByCountry {...common} />\n}, {\n  'text': 'Wins by objectives',\n  'path': '/objectives/',\n  'component': () => <WinsByObjectives {...common} />\n}, {\n  'text': 'Wins by rounds',\n  'path': '/rounds/',\n  'component': () => <WinsByRounds {...common} />\n}, {\n  'text': 'Wins by board',\n  'path': '/board/',\n  'component': () => <WinsByBoard {...common} />\n}, {\n  'text': 'Wins by stars',\n  'path': '/stars/',\n  'component': () => <WinsByStars {...common} />\n}];\n\nconst frequencies = [{\n  'text': 'Country frequency',\n  'path': '/country/frequency/',\n  'component': () => <CountryFrequency {...common} />\n}, {\n  'text': 'Board frequency',\n  'path': '/board/frequency/',\n  'component': () => <BoardFrequency {...common} />\n}];\n\nconst windgambit = [{\n  'text': 'Resolution tiles',\n  'path': '/resolution/',\n  'component': () => <Resolution {...common} />\n}, {\n  'text': 'Aggressive tiles',\n  'path': '/windgambit/aggressive/',\n  'component': () => <Aggressive {...common} />\n}, {\n  'text': 'Passive tiles',\n  'path': '/windgambit/passive/',\n  'component': () => <Passive {...common} />\n}];\n\nconst generator = [{\n  'text': 'Generator',\n  'path': '/generator/',\n  'component': () => <Generator {...common} />\n}];\n\nconst countryCombination = countries.map(c => {\n  const Country = WinsByCombination(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/' + c + '/',\n    'component': () => <Country {...common} />\n  };\n});\n\nconst boardCombination = boards.map(c => {\n  const Board = WinsByCombination2(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/' + c + '/',\n    'component': () => <Board {...common} />\n  };\n});\n\nconst ScytheLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={windgambit} title={\"Wind Gambit\"} key={\"Wind Gambit\"} />\n    <Divider />\n    <Links charts={frequencies} title={\"Frequencies\"} key={\"Frequencies\"} />\n    <Divider />\n    <Links charts={countryCombination} title={\"Country Combinations\"} key={\"Country combinations\"} />\n    <Divider />\n    <Links charts={boardCombination} title={\"Board Combinations\"} key={\"Board combinations\"} />\n    <Divider />\n    <Links charts={generator} title={\"Tools\"} key={\"Generator\"} />\n  </div>\n);\n\nconst ScytheContent = () => (\n  [...wins, ...frequencies, ...windgambit, ...countryCombination, ...boardCombination, ...generator].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {ScytheContent, ScytheLinks, ScytheImg};","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ListItem from '@material-ui/core/ListItem';\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from 'react-redux';\nimport { kemetConfig } from '../actions';\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer\n});\n\nconst mapDispatchToProps = {\n  handleConfig: kemetConfig\n};\n\nclass Element extends React.Component {\n  handleChange = event => {\n    this.props.handleConfig({\n      perPlayer: event.target.checked\n    });\n  }\n\n  render() {\n    const {config} = this.props;\n\n    return (\n      <ListItem>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={config.perPlayer}\n                onChange={this.handleChange}\n                value={config.perPlayer}\n                color=\"primary\"\n              />\n            }\n            label=\"Stats per player\"\n          />\n        </FormGroup>\n      </ListItem>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Element);\n","import {\n  KEMET_INIT,\n  KEMET_CONFIG\n} from '../actions/types';\n\nexport const kemetInit = () => ({\n  type: KEMET_INIT\n});\n\nexport const kemetConfig = config => ({\n  type: KEMET_CONFIG,\n  config\n});\n","export const KEMET_INIT = 'KEMET_INIT';\nexport const KEMET_CONFIG = 'KEMET_CONFIG';\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\n\nconst graph = ({games, players}) => {\n  const Init = Array(5).fill(0).map(() => players.map(() => 0));\n\n  const Reduce = (acc, {setup}) => {\n    setup.forEach(({player, position}) => {\n      let p = players.indexOf(player);\n      acc[position][p]++;\n    });\n    return acc;\n  };\n\n  return {\n    'labels': players,\n    'series': games.reduce(Reduce, Init),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\n\nconst graph = ({games, players, tiles, color, config: {perPlayer}}) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n\n  const I = players.map(() => colored_tiles.map(() => 0));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles, player}) => {\n      tiles.forEach(t => {\n        let p = perPlayer ? players.indexOf(player) : 0;\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          acc[p][i]++;\n        } else {\n          if (tiles.indexOf(t) === -1) {\n            console.log(t);\n          }\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colored_tiles,\n    'series': games.reduce(R, I),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, players, tiles, color, config: {perPlayer}}) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n\n  const I = players.map(() => colored_tiles.map(() => incrementalAverage()));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles, score, player}) => {\n      tiles.forEach(t => {\n        let p = perPlayer ? players.indexOf(player) : 0;\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          acc[p][i].add(score);\n        } else {\n          if (tiles.indexOf(t) === -1) {\n            console.log(t);\n          }\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colored_tiles,\n    'series': games.reduce(R, I).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Chartist from '../../Bar';\nimport { connect } from 'react-redux';\nimport incrementalAverage from 'incremental-average';\n\nconst graph = ({games, players, tiles, color, config: {perPlayer}}) => {\n\n  const colored_tiles = tiles.filter(d => d.color === color).map(d => d.name);\n\n  const I = players.map(() => colored_tiles.map(() => incrementalAverage()));\n\n  const R = (acc, {setup}) => {\n    setup.forEach(({tiles, position, player}) => {\n      tiles.forEach(t => {\n        let p = perPlayer ? players.indexOf(player) : 0;\n        let i = colored_tiles.indexOf(t);\n\n        if(i > -1) {\n          acc[p][i].add(position + 1);\n        } else {\n          if (tiles.indexOf(t) === -1) {\n            console.log(t);\n          }\n        }\n      });\n    });\n\n    return acc;\n  };\n\n  return {\n    'labels': colored_tiles,\n    'series': games.reduce(R, I).map(d => d.map(v => v.getAverage())),\n    'total': games.length,\n    'sample': games.length\n  };\n};\n\nconst mapStateToProps = state => ({\n  ...state.kemetReducer,\n  options: {\n    stackBars: false\n  },\n  draw: () => 1,\n  className: \"ct-octave players\"\n});\n\nclass Element extends React.Component {\n\n  render() {\n    const args = {...this.props, data: graph(this.props)}\n    return <Chartist {...args} />;\n  }\n}\n\nexport default connect(mapStateToProps)(Element);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Links from '../Links';\nimport { Route } from 'react-router-dom';\nimport KemetImg from './img.jpg';\nimport PerPlayer from './components/config';\nimport Standings from './components/standings';\nimport TilesByPicks from './components/tilesByPicks';\nimport TilesByVP from './components/tilesByVP';\nimport TilesByPosition from './components/tilesByPosition';\n\nconst colors = ['red', 'blue', 'white', 'black'];\n\nconst tiles = [\n  ...colors.map(c => ({\n    'text': c + ' tiles by VP',\n    'path': '/tiles/vp/' + c + '/',\n    'component': () => <TilesByVP color={c} />\n  })),\n  ...colors.map(c => ({\n    'text': c + ' tiles by position',\n    'path': '/tiles/position/' + c + '/',\n    'component': () => <TilesByPosition color={c} />\n  })),\n  ...colors.map(c => ({\n    'text': c + ' tiles by # of picks',\n    'path': '/tiles/picks/' + c + '/',\n    'component': () => <TilesByPicks color={c} />\n  }))\n];\n\nconst wins = [{\n  'text': 'Standings',\n  'path': '/',\n  'component': () => <Standings />\n}];\n\nconst KemetLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={tiles} title={\"Tile Stats\"} key={\"tiles\"} open={true} />\n    <Divider />\n    <PerPlayer />\n  </div>\n);\n\nconst KemetContent = () => (\n  [...wins, ...tiles].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {KemetContent, KemetLinks, KemetImg};\n","const f = order => (\n  {player: player1, total: total1, battle: battle1},\n  {player: player2, total: total2, battle: battle2}\n) => {\n  if (total1 > total2) {\n    return -1;\n  } else if (total1 < total2) {\n    return 1;\n  } else {\n    if (battle1 > battle2) {\n      return -1;\n    } else if (battle1 < battle2) {\n      return 1;\n    } else {\n      let a = order.indexOf(player1);\n      let b = order.indexOf(player2);\n\n      if (a > b) {\n        return 1;\n      }\n\n      if (a < b) {\n        return -1;\n      }\n    }\n  }\n}\n\nconst transform = ({player, vp}) => {\n  let total = 0;\n  let battle = 0;\n\n  for (let type in vp) {\n    total += vp[type];\n\n    if (type === 'battle') {\n      battle += vp[type]\n    }\n  }\n\n  return {\n    player,\n    total,\n    battle\n  }\n}\n\nexport default ({order, setup}) => setup.map(transform).sort(f(order));\n","import data from '../plays.json';\nimport score from './score';\nimport tiles from '../tiles.json';\nimport {\n  unique,\n  flatten,\n  collection,\n  discrete\n} from '../../common';\n\nconst addScoreToData = game => {\n  const {setup} = game;\n  const hash = {};\n\n  score(game).forEach(({player, total}, i) => {\n    hash[player] = {};\n    hash[player].position = i;\n    hash[player].score = total;\n  });\n\n  const temp = setup.map(d => {\n    const {player} = d;\n    const {position, score} = hash[player];\n    d.position = position;\n    d.score = score;\n    return d;\n  });\n\n  return {...game, setup: temp};\n};\n\nconst tilesToArray = json => {\n  const temp = [];\n\n  for (let i in tiles) {\n    const t = tiles[i];\n    t.name = i;\n    temp.push(t);\n  }\n\n  return temp;\n};\n\nexport default {\n  players: unique(flatten(['Dimitris', 'Panagiotis', 'Elena', 'Kostas', ...collection(data)(d => d.order)])),\n  games: data.map(addScoreToData),\n  rounds: discrete([1, ...data.map(d => d.rounds)]),\n  tiles: tilesToArray(tiles),\n  config: {\n    perPlayer: true\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { ScytheLinks, ScytheContent, ScytheImg } from './scythe/Charts';\nimport { KemetLinks, KemetContent, KemetImg } from './kemet';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport kemetReducer from './kemet/reducer';\nimport { kemetInit } from './kemet/actions';\n\nconst store = createStore(combineReducers({\n  kemetReducer\n}));\n\nstore.dispatch(kemetInit())\n\nconst Scythe = () => <Game basename=\"stats/scythe\" links={<ScytheLinks />} content={<ScytheContent />} />;\nconst Kemet = () => <Game basename=\"stats/kemet\" links={<KemetLinks />} content={<KemetContent />} />;\n\nconst style = {\n  width: '100%',\n  height: 'auto'\n}\n\nconst Index = () => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n    >\n    <Grid item xs={6}>\n        <Link to=\"/stats/scythe\">\n          <img src={ScytheImg} alt=\"scythe\" style={style} />\n        </Link>\n    </Grid>\n    <Grid item xs={6}>\n        <Link to=\"/stats/kemet\">\n          <img src={KemetImg} alt=\"kemet\" style={style} />\n        </Link>\n    </Grid>\n  </Grid>\n);\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Route path=\"/stats/\" exact component={Index} />\n      <Route path=\"/stats/scythe\" component={Scythe} />\n      <Route path=\"/stats/kemet\" component={Kemet} />\n    </Provider>\n  </Router>\n, document.getElementById('root'));\n","import initialState from './init';\nimport {\n  KEMET_INIT,\n  KEMET_CONFIG\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case KEMET_INIT:\n      return initialState;\n    case KEMET_CONFIG:\n      return {...state, config: action.config};\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}