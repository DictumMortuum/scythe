{"version":3,"sources":["components/bar.js","components/averageWinningPoints.js","components/winsByBoard.js","components/winsByCountry.js","components/winsByObjectives.js","components/winsByRounds.js","components/winsByPlayer.js","components/winsByStars.js","components/pie.js","components/countryFrequency.js","components/boardFrequency.js","components/sweetspot.js","analysis.js","Charts.js","components/winsByCombination.js","components/winsByCombination2.js","App.js","index.js"],"names":["dflt","stackBars","axisY","labelInterpolationFnc","value","Number","isInteger","low","listener","data","type","element","attr","style","s","series","length","seriesIndex","animate","stroke-width","begin","dur","from","to","fill","bar","props","className","_props$options","options","_props$draw","draw","react_default","a","createElement","dist_default","Object","objectSpread","averageWinningPoints","_ref","players","stats","map","incrementalAverage","Init","filter","_ref2","winner","points","undefined","reduce","acc","_ref3","p","indexOf","ia","add","labels","graph","winsByBoard","boards","board","b","winsByCountry","countries","country","c","winsByObjectives","objectives","forEach","d","o","winsByRounds","rounds","_rounds","r","winsByPlayer","winsByStars","Array","_","i","pie","countryFrequency","relativeFrequency","x","boardFrequency","high","sweetspot","percentile","max_points","parseInt","slice","percentileRounds","toConsumableArray","concat","reverse","percentilePoints","percentileObjectives","round_stats","point_stats","objective_stats","Typography_default","paragraph","discrete","distinct","Set","sort","cols","y","analysis","absoluteFrequency","col","l","modifier","wins","text","path","component","common","frequencies","countryCombination","base","Country","combinations","boardCombination","Board","Links","title","charts","List_default","subheader","ListSubheader_default","Link","textDecoration","ListItem_default","key","button","ListItemText_default","primary","ChartLinks","Charts_Links","Divider_default","ChartContent","Route","exact","PersistentDrawerLeft","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","classes","theme","BrowserRouter","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Charts_ChartLinks","content","contentShift","Charts_ChartContent","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.a7abd6df.chunk.js","sourcesContent":["import React from 'react';\nimport Chartist from 'react-chartist';\n\nconst dflt = {\n  stackBars: true,\n  axisY: {\n    labelInterpolationFnc: function (value) {\n      return Number.isInteger(value) ? value : null;\n    }\n  },\n  low: 0\n};\n\nconst listener = (data) => {\n  if (data.type === 'bar') {\n    data.element.attr({\n      style: 'stroke-width: 0px'\n    });\n\n    for (let s = 0; s < data.series.length; ++s) {\n      if (data.seriesIndex === s) {\n        data.element.animate({\n          'stroke-width': {\n            //begin: s * 500,\n            begin: 0,\n            dur: 0.5,\n            from: 0,\n            to: 40,\n            fill: 'freeze'\n          }\n        }, false);\n      }\n    }\n  }\n}\n\nexport default props => {\n  const {data, className, options = {}, draw = listener} = props;\n\n  return (\n    <Chartist\n      data={data}\n      options={{...dflt, ...options}}\n      type={'Bar'}\n      className={className}\n      listener={{'draw': draw}}\n    />\n  );\n}","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Chartist from './bar';\n\nconst graph = ({data, players}) => {\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({winner, points}) => winner !== undefined && points !== undefined;\n  \n  const Reduce = (acc, {winner, points}) => {\n    let p = players.indexOf(winner);\n    let ia = stats[p];\n    acc[p][p] = ia.add(points);\n    return acc;\n  }\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': players\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","\nimport React from 'react';\nimport Chartist from './bar';\n\nconst graph = ({data, players, boards}) => {\n  const Filter = ({winner, board}) => winner !== undefined && board !== undefined;\n\n  const Reduce = (acc, {board, winner}) => {\n    let b = boards.indexOf(board);\n    let p = players.indexOf(winner);\n    acc[p][b]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => boards.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': boards\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = ({data, players, countries}) => {\n  const Filter = ({winner, country}) => winner !== undefined && country !== undefined;\n\n  const Reduce = (acc, {country, winner}) => {\n    let c = countries.indexOf(country);\n    let p = players.indexOf(winner);\n    acc[p][c]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => countries.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': countries\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = ({data, players, objectives}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives: _objectives}) => {\n    _objectives.forEach(d => {\n      let o = objectives.indexOf(d);\n      let p = players.indexOf(winner);\n      acc[p][o]++;\n    });\n  \n    return acc;\n  };\n  \n  const Init = players.map(() => objectives.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': objectives\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = ({data, players, rounds}) => {\n  const Filter = ({winner, rounds}) => winner !== undefined && rounds !== undefined;\n\n  const Reduce = (acc, {rounds: _rounds, winner}) => {\n    let r = rounds.indexOf(_rounds);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => rounds.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': rounds\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner}) => winner !== undefined;\n\n  const Reduce = (acc, {winner}) => {\n    let p = players.indexOf(winner);\n    acc[p][p]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => players.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': players\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives}) => {\n    let o = objectives.length - 1;\n    let p = players.indexOf(winner);\n    acc[p][o]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => Array(6).fill(0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': Array(6).fill(0).map((_, i) => i + 1)\n  };\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);","import React from 'react';\nimport Chartist from 'react-chartist';\n\nexport default ({data, className}) => (\n  <Chartist data={data} type={'Pie'} className={className} />\n);\n","import React from 'react';\nimport Chartist from './pie';\n\nconst graph = ({data, countries, relativeFrequency}) => ({\n  'series': relativeFrequency(countries)(data.map(x => x.country)),\n  'labels': countries\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave countries'} />);\n","import React from 'react';\nimport Chartist from './pie';\n\nconst graph = ({data, boards, relativeFrequency}) => ({\n  'series': relativeFrequency(boards)(data.map(x => x.board)),\n  'labels': boards\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave'} />);\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Typography from '@material-ui/core/Typography';\nimport Chartist from './bar';\n\nconst graph = ({data, players, rounds: r, points: p, percentile}) => {\n\n  const max_points = parseInt(p.slice(-1)) + 1;\n\n  const percentileRounds = [...Array(r[0]).fill(0), ...percentile(r).reverse()];\n  const percentilePoints = percentile(Array(max_points));\n  const percentileObjectives = [0, ...percentile(Array(6)).reverse()];\n\n  const round_stats = players.map(() => incrementalAverage());\n  const point_stats = players.map(() => incrementalAverage());\n  const objective_stats = players.map(() => incrementalAverage());\n\n  const Filter = ({\n    winner,\n    points,\n    rounds,\n    objectives\n  }) => winner !== undefined && (points !== undefined || rounds !== undefined || objectives !== undefined);\n\n  const Reduce = (acc, {winner, points, rounds, objectives}) => {\n    let p = players.indexOf(winner);\n\n    if (rounds !== undefined) {\n      acc[0][p] = round_stats[p].add(percentileRounds[rounds]);\n    }\n\n    if (points !== undefined) {\n      acc[1][p] = point_stats[p].add(percentilePoints[points]);\n    }\n\n    if (objectives !== undefined) {\n      acc[2][p] = objective_stats[p].add(percentileObjectives[objectives.length]);\n    }\n\n    return acc;\n  };\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': players\n  };\n};\n\nconst options = {\n  stackBars: false,\n  high: 100\n};\n\nexport default props => (\n  <div>\n    <Chartist\n      data={graph(props)}\n      options={options}\n      draw={() => 1}\n      className={\"ct-octave players\"} \n    />\n    <Typography paragraph>\n      <b>1st bar: round sweetspot.</b> The higher the score, the earlier does this player end the game.\n    </Typography>\n    <Typography paragraph>\n      <b>2nd bar: points sweetspot.</b> The higher the score, the more the player scores on average.\n    </Typography>\n    <Typography paragraph>\n      <b>3rd bar: objectives sweetspot.</b> The higher the score, the more time this player wins with less than 6 objectives.\n    </Typography>\n  </div>\n);\n","import {countries, players, boards, objectives} from './scythe.json';\nimport data from './plays.json';\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\n/*\n * Returns an array containing the relative frequency of cols.\n */\nconst relativeFrequency = cols => data => cols.map(x => data.filter(y => x === y).length);\n\n/*\n * Returns an array containing the absolute frequency of cols.\n */\nconst absoluteFrequency = cols => data => relativeFrequency(cols)(data).map(x => x / data.length);\n\n/*\n * percentile([1,2,3,4]) = [ 25, 33.333333333333336, 50, 100 ]\n */\nconst percentile = col => {\n  let l = col.length;\n  let modifier = x => x / l * 100;\n  return Array(l).fill(1).map((x, i) => modifier(x + i));\n}\n\nexport default {\n  countries,\n  players,\n  boards,\n  objectives,\n  data,\n  rounds: discrete(data.filter(d => d.rounds).map(d => d.rounds)),\n  points: discrete(data.filter(d => d.points).map(d => d.points)),\n  relativeFrequency,\n  absoluteFrequency,\n  percentile\n};\n","import React from 'react';\nimport {countries, boards} from './scythe.json';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\nimport { Route, Link } from \"react-router-dom\";\nimport AverageWinningPoints from './components/averageWinningPoints';\nimport WinsByBoard from './components/winsByBoard';\nimport WinsByCombination from './components/winsByCombination';\nimport WinsByCombination2 from './components/winsByCombination2';\nimport WinsByCountry from './components/winsByCountry';\nimport WinsByObjectives from './components/winsByObjectives';\nimport WinsByRounds from './components/winsByRounds';\nimport WinsByPlayer from './components/winsByPlayer';\nimport WinsByStars from './components/winsByStars';\nimport CountryFrequency from './components/countryFrequency';\nimport BoardFrequency from './components/boardFrequency';\nimport Sweetspot from './components/sweetspot';\nimport common from './analysis';\n\nconst wins = [{\n  'text': 'Wins by player',\n  'path': '/scythe/',\n  'component': () => <WinsByPlayer {...common} />\n}, {\n  'text': 'Average winning points',\n  'path': '/scythe/average/',\n  'component': () => <AverageWinningPoints {...common} />\n}, {\n  'text': 'Player sweetspot',\n  'path': '/scythe/sweetspot/',\n  'component': () => <Sweetspot {...common} />\n}, {\n  'text': 'Wins by country',\n  'path': '/scythe/country/',\n  'component': () => <WinsByCountry {...common} />\n}, {\n  'text': 'Wins by objectives',\n  'path': '/scythe/objectives/',\n  'component': () => <WinsByObjectives {...common} />\n}, {\n  'text': 'Wins by rounds',\n  'path': '/scythe/rounds/',\n  'component': () => <WinsByRounds {...common} />\n}, {\n  'text': 'Wins by board',\n  'path': '/scythe/board/',\n  'component': () => <WinsByBoard {...common} />\n}, {\n  'text': 'Wins by stars',\n  'path': '/scythe/stars/',\n  'component': () => <WinsByStars {...common} />\n}];\n\nconst frequencies = [{\n  'text': 'Country frequency',\n  'path': '/scythe/country/frequency/',\n  'component': () => <CountryFrequency {...common} />\n}, {\n  'text': 'Board frequency',\n  'path': '/scythe/board/frequency',\n  'component': () => <BoardFrequency {...common} />\n}];\n\nconst countryCombination = countries.map(c => {\n  const Country = WinsByCombination(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/scythe/' + c + '/',\n    'component': () => <Country {...common} />\n  };\n});\n\nconst boardCombination = boards.map(c => {\n  const Board = WinsByCombination2(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/scythe/' + c + '/',\n    'component': () => <Board {...common} />\n  };\n})\n\nconst Links = ({title, charts}) => (\n  <List\n    component=\"nav\"\n    subheader={<ListSubheader component=\"div\">{title}</ListSubheader>}\n  >\n  {charts.map(({path, text}) => (\n    <Link to={path} style={{ textDecoration: 'none' }}>\n      <ListItem key={path} button>\n        <ListItemText primary={text} />\n      </ListItem>\n    </Link>\n  ))}\n  </List>\n);\n\nconst ChartLinks = () => (\n  <div>\n  <Links charts={wins} title={\"Wins\"} />\n  <Divider />\n  <Links charts={frequencies} title={\"Frequencies\"} />\n  <Divider />\n  <Links charts={countryCombination} title={\"Country combinations\"} />\n  <Divider />\n  <Links charts={boardCombination} title={\"Board combinations\"} />\n  </div>\n);\n\nconst ChartContent = () => (\n  [...wins, ...frequencies, ...countryCombination, ...boardCombination].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {ChartContent, ChartLinks};","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = base => ({data, players, boards}) => {\n  const combinations = boards.map(d => base + ' ' + d);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country === base && board !== undefined;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': combinations\n  };\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\n\nconst graph = base => ({data, players, countries}) => {\n  const combinations = countries.map(d => d + ' ' + base);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country !== undefined && board === base;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return {\n    'series': data.filter(Filter).reduce(Reduce, Init),\n    'labels': combinations\n  };\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ChartLinks, ChartContent} from './Charts';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Scythe Stats\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={this.handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n            <Divider />\n            <ChartLinks />\n          </Drawer>\n          <main\n            className={classNames(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <ChartContent />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}