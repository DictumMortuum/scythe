{"version":3,"sources":["components/bar.js","components/common.js","components/averageWinningPoints.js","components/winsByBoard.js","components/winsByCombination.js","components/winsByCombination2.js","components/winsByCountry.js","components/winsByObjectives.js","components/winsByRounds.js","components/winsByPlayer.js","components/winsByStars.js","components/pie.js","components/countryFrequency.js","components/boardFrequency.js","components/sweetspot.js","components/resolution.js","components/passive.js","components/aggressive.js","components/generator.js","analysis.js","Charts.js","App.js","index.js"],"names":["dflt","stackBars","axisY","labelInterpolationFnc","value","Number","isInteger","low","listener","data","type","element","attr","style","s","series","length","seriesIndex","animate","stroke-width","begin","dur","from","to","fill","bar","props","_props$data","total","sample","rest","Object","objectWithoutProperties","className","_props$options","options","_props$draw","draw","react_default","a","createElement","Typography_default","paragraph","dist_default","objectSpread","common","_ref","Filter","Reduce","Init","_ref$labels","labels","temp","filter","reduce","averageWinningPoints","players","stats","map","incrementalAverage","acc","_ref3","winner","points","p","indexOf","ia","add","_ref2","undefined","graph","winsByBoard","boards","board","b","winsByCombination","base","combinations","d","country","c","winsByCombination2","countries","winsByCountry","winsByObjectives","objectives","forEach","o","winsByRounds","rounds","_rounds","r","winsByPlayer","winsByStars","Array","_","i","pie","countryFrequency","relativeFrequency","x","boardFrequency","high","sweetspot","percentile","max_points","parseInt","slice","percentileRounds","toConsumableArray","concat","reverse","percentilePoints","percentileObjectives","round_stats","point_stats","objective_stats","resolution","resolutions","passive","passives","j","aggressive","aggressives","prototype","shuffle","this","Math","floor","random","container","_ref$winscutoff","winscutoff","_ref$filters","filters","_ref$playernumber","playernumber","info","push","hashmap","hash","Combinatorics","bigCombination","col","key","slicedToArray","retval","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","Generator","state","game","games","handleFilters","event","_this","setState","target","handlePlayers","handleCutoff","handleSubmit","console","log","handleNext","_this$state","_this$props","classes","Card_default","CardContent_default","card","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","MenuItem_default","multiple","input","Input_default","id","renderValue","selected","chips","Chip_default","label","chip","name","CardActions_default","Button_default","variant","color","onClick","component","result","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","React","Component","withStyles","theme","root","display","flexWrap","margin","spacing","unit","minWidth","maxWidth","noLabel","marginTop","minHeight","withTheme","unique","Set","collection","f","apply","l","discrete","distinct","sort","cols","y","analysis","absoluteFrequency","modifier","wins","text","path","frequencies","windgambit","generator","countryCombination","Country","WinsByCombination","boardCombination","Board","WinsByCombination2","Links","open","handleClick","title","charts","List_default","subheader","ListItem_default","button","ListItemText_default","secondary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","Link","textDecoration","primary","ChartLinks","Charts_Links","Divider_default","ChartContent","Route","exact","PersistentDrawerLeft","handleDrawerOpen","handleDrawerClose","BrowserRouter","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","menuButton","hide","Menu_default","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Charts_ChartLinks","content","contentShift","Charts_ChartContent","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.224d7f82.chunk.js","sourcesContent":["import React from 'react';\nimport Chartist from 'react-chartist';\nimport Typography from '@material-ui/core/Typography';\n\nconst dflt = {\n  stackBars: true,\n  axisY: {\n    labelInterpolationFnc: function (value) {\n      return Number.isInteger(value) ? value : null;\n    }\n  },\n  low: 0\n};\n\nconst listener = (data) => {\n  if (data.type === 'bar') {\n    data.element.attr({\n      style: 'stroke-width: 0px'\n    });\n\n    for (let s = 0; s < data.series.length; ++s) {\n      if (data.seriesIndex === s) {\n        data.element.animate({\n          'stroke-width': {\n            //begin: s * 500,\n            begin: 0,\n            dur: 0.5,\n            from: 0,\n            to: 40,\n            fill: 'freeze'\n          }\n        }, false);\n      }\n    }\n  }\n}\n\nexport default props => {\n  const {data: {total, sample, ...rest}, className, options = {}, draw = listener} = props;\n\n  return (\n    <div>\n      <Typography paragraph>\n        <b>Sample size: {sample} / {total}</b>\n      </Typography>\n      <Chartist\n        data={rest}\n        options={{...dflt, ...options}}\n        type={'Bar'}\n        className={className}\n        listener={{'draw': draw}}\n      />\n    </div>\n  );\n};\n","export default ({Filter, Reduce, Init, labels = [], data}) => {\n  let temp = data.filter(Filter);\n\n  return {\n    labels,\n    'series': temp.reduce(Reduce, Init),\n    'total': data.length,\n    'sample': temp.length\n  }\n};\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players}) => {\n  const stats = players.map(() => incrementalAverage());\n\n  const Filter = ({winner, points}) => winner !== undefined && points !== undefined;\n  \n  const Reduce = (acc, {winner, points}) => {\n    let p = players.indexOf(winner);\n    let ia = stats[p];\n    acc[p][p] = ia.add(points);\n    return acc;\n  }\n\n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","\nimport React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, boards}) => {\n  const Filter = ({winner, board}) => winner !== undefined && board !== undefined;\n\n  const Reduce = (acc, {board, winner}) => {\n    let b = boards.indexOf(board);\n    let p = players.indexOf(winner);\n    acc[p][b]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => boards.map(() => 0));\n\n  return common({\n    'labels': boards,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = base => ({data, players, boards}) => {\n  const combinations = boards.map(d => base + ' ' + d);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country === base && board !== undefined;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = base => ({data, players, countries}) => {\n  const combinations = countries.map(d => d + ' ' + base);\n\n  const Filter = ({winner, country, board}) => winner !== undefined && country !== undefined && board === base;\n\n  const Reduce = (acc, {country, winner, board}) => {\n    let p = players.indexOf(winner);\n    let c = combinations.indexOf(country + ' ' + board);\n\n    acc[p][c]++;\n    return acc;\n  };\n\n  const Init = players.map(() => combinations.map(() => 0));\n\n  return common({\n    'labels': combinations,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default base => props => (<Chartist data={graph(base)(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, countries}) => {\n  const Filter = ({winner, country}) => winner !== undefined && country !== undefined;\n\n  const Reduce = (acc, {country, winner}) => {\n    let c = countries.indexOf(country);\n    let p = players.indexOf(winner);\n    acc[p][c]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => countries.map(() => 0));\n\n  return common({\n    'labels': countries,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, objectives}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives: _objectives}) => {\n    _objectives.forEach(d => {\n      let o = objectives.indexOf(d);\n      let p = players.indexOf(winner);\n      acc[p][o]++;\n    });\n  \n    return acc;\n  };\n  \n  const Init = players.map(() => objectives.map(() => 0));\n\n  return common({\n    'labels': objectives,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, rounds}) => {\n  const Filter = ({winner, rounds}) => winner !== undefined && rounds !== undefined;\n\n  const Reduce = (acc, {rounds: _rounds, winner}) => {\n    let r = rounds.indexOf(_rounds);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => rounds.map(() => 0));\n\n  return common({\n    'labels': rounds,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner}) => winner !== undefined;\n\n  const Reduce = (acc, {winner}) => {\n    let p = players.indexOf(winner);\n    acc[p][p]++;\n    return acc;\n  }\n  \n  const Init = players.map(() => players.map(() => 0));\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players}) => {\n  const Filter = ({winner, objectives}) => winner !== undefined && objectives !== undefined;\n\n  const Reduce = (acc, {winner, objectives}) => {\n    let o = objectives.length - 1;\n    let p = players.indexOf(winner);\n    acc[p][o]++;\n    return acc;\n  };\n  \n  const Init = players.map(() => Array(6).fill(0));\n\n  return common({\n    'labels': Array(6).fill(0).map((_, i) => i + 1),\n    Reduce,\n    Filter,\n    Init,\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from 'react-chartist';\n\nexport default ({data, className}) => (\n  <Chartist data={data} type={'Pie'} className={className} />\n);\n","import React from 'react';\nimport Chartist from './pie';\n\nconst graph = ({data, countries, relativeFrequency}) => ({\n  'series': relativeFrequency(countries)(data.map(x => x.country)),\n  'labels': countries\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave countries'} />);\n","import React from 'react';\nimport Chartist from './pie';\n\nconst graph = ({data, boards, relativeFrequency}) => ({\n  'series': relativeFrequency(boards)(data.map(x => x.board)),\n  'labels': boards\n});\n\nexport default props => (<Chartist data={graph(props)} className={'ct-octave'} />);\n","import React from 'react';\nimport incrementalAverage from 'incremental-average';\nimport Typography from '@material-ui/core/Typography';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, rounds: r, points: p, percentile}) => {\n\n  const max_points = parseInt(p.slice(-1)) + 1;\n\n  const percentileRounds = [...Array(r[0]).fill(0), ...percentile(r).reverse()];\n  const percentilePoints = percentile(Array(max_points));\n  const percentileObjectives = [0, ...percentile(Array(6)).reverse()];\n\n  const round_stats = players.map(() => incrementalAverage());\n  const point_stats = players.map(() => incrementalAverage());\n  const objective_stats = players.map(() => incrementalAverage());\n\n  const Filter = ({\n    winner,\n    points,\n    rounds,\n    objectives\n  }) => winner !== undefined && (points !== undefined || rounds !== undefined || objectives !== undefined);\n\n  const Reduce = (acc, {winner, points, rounds, objectives}) => {\n    let p = players.indexOf(winner);\n\n    if (rounds !== undefined) {\n      acc[0][p] = round_stats[p].add(percentileRounds[rounds]);\n    }\n\n    if (points !== undefined) {\n      acc[1][p] = point_stats[p].add(percentilePoints[points]);\n    }\n\n    if (objectives !== undefined) {\n      acc[2][p] = objective_stats[p].add(percentileObjectives[objectives.length]);\n    }\n\n    return acc;\n  };\n\n  return common({\n    'labels': players,\n    Reduce,\n    Filter,\n    Init: players.map(() => players.map(() => 0)),\n    data\n  });\n};\n\nconst options = {\n  stackBars: false,\n  high: 100\n};\n\nexport default props => (\n  <div>\n    <Chartist\n      data={graph(props)}\n      options={options}\n      draw={() => 1}\n      className={\"ct-octave players\"} \n    />\n    <Typography paragraph>\n      <b>1st bar: round sweetspot.</b> The higher the score, the earlier does this player end the game.\n    </Typography>\n    <Typography paragraph>\n      <b>2nd bar: points sweetspot.</b> The higher the score, the more the player scores on average.\n    </Typography>\n    <Typography paragraph>\n      <b>3rd bar: objectives sweetspot.</b> The higher the score, the more time this player wins with less than 6 objectives.\n    </Typography>\n  </div>\n);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, resolutions}) => {\n\n  const Reduce = (acc, {winner, resolution}) => {\n    let r = resolutions.indexOf(resolution);\n    let p = players.indexOf(winner);\n    acc[p][r]++;\n    return acc;\n  };\n\n  return common({\n    'labels': resolutions,\n    Reduce,\n    Filter: ({winner, resolution}) => winner !== undefined && resolution !== undefined,\n    Init: players.map(() => resolutions.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, passives}) => {\n\n  const Reduce = (acc, {winner, passive}) => {\n    let j = passives.indexOf(passive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': passives,\n    Reduce,\n    Filter: ({winner, passive}) => winner !== undefined && passive !== undefined,\n    Init: players.map(() => passives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport Chartist from './bar';\nimport common from './common';\n\nconst graph = ({data, players, aggressives}) => {\n\n  const Reduce = (acc, {winner, aggressive}) => {\n    let j = aggressives.indexOf(aggressive);\n    let i = players.indexOf(winner);\n    acc[i][j]++;\n    return acc;\n  };\n\n  return common({\n    'labels': aggressives,\n    Reduce,\n    Filter: ({winner, aggressive}) => winner !== undefined && aggressive !== undefined,\n    Init: players.map(() => aggressives.map(() => 0)),\n    data\n  });\n};\n\nexport default props => (<Chartist data={graph(props)} className={\"ct-octave players\"} />);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport Paper from '@material-ui/core/Paper';\nimport TableRow from '@material-ui/core/TableRow';\nimport Combinatorics from 'js-combinatorics';\n\nArray.prototype.shuffle = function() {\n  var i = this.length, j, temp;\n  if ( i === 0 ) return this;\n  while ( --i ) {\n     j = Math.floor( Math.random() * ( i + 1 ) );\n     temp = this[i];\n     this[i] = this[j];\n     this[j] = temp;\n  }\n  return this;\n};\n\nconst container = ({boards, countries, data, winscutoff = 1, filters = [], playernumber = 4}) => {\n\n  const info = data.filter(d => d.board !== undefined && d.country !== undefined);\n\n  const combinations = (() => {\n    let temp = [];\n  \n    countries.forEach(country => {\n      boards.forEach(board => {\n        let n = info.filter(d => board === d.board && country === d.country).length;\n        \n        if (n <= winscutoff) {\n          temp.push([board, country]);\n        }\n      });\n    });\n\n    return temp.shuffle().slice(0, 30);\n  })();\n  \n  const hashmap = (() => {\n    let hash = {};\n  \n    [...boards, ...countries].forEach(c => {\n      hash[c] = 0;\n    });\n  \n    return hash;\n  })();\n\n  const impossible = col => {\n    let hash = {...hashmap};\n  \n    col.forEach(([board, country]) => {\n      hash[board]++;\n      hash[country]++;\n    });\n\n    for (let key in hash) {\n      if (hash[key] > 1) {\n        return 0;\n      }\n    }\n\n    let retval = 1;\n\n    filters.forEach(key => {\n      if (hash[key] === 0) {\n        retval = 0;\n      }\n    });\n\n    return retval;\n  };\n\n  return Combinatorics.bigCombination(combinations, playernumber).filter(impossible);\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  result: {\n    marginTop: theme.spacing.unit * 3,\n  }, \n  card: {\n    minHeight: 100\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass Generator extends React.Component {\n  state = {\n    filters: [],\n    total: \"\",\n    i: 0,\n    game: [],\n    games: {},\n    playernumber: 3,\n    winscutoff: 1\n  };\n\n  handleFilters = event => {\n    this.setState({ filters: event.target.value });\n  };\n\n  handlePlayers = event => {\n    this.setState({ playernumber: event.target.value });\n  };\n\n  handleCutoff = event => {\n    this.setState({ winscutoff: event.target.value });\n  };\n\n  handleSubmit = () => {\n    const games = container({...this.state, ...this.props});\n\n    console.log(games);\n\n    if (games.length !== 0) {\n      this.setState({\n        i: 0,\n        games,\n        total: \"Found \" + games.length + \" combinations.\",\n        game: games[0]\n      });\n    } else {\n      this.setState({\n        total: \"There are no combinations with this setup. Please try again.\"\n      });\n    }\n  };\n\n  handleNext = () => {\n    const {i, games} = this.state;\n\n    this.setState({\n      game: games[i],\n      i: i + 1,\n    });\n  }\n\n  render() {\n    const {classes, countries, boards} = this.props;\n\n    return (\n      <div>\n        <Card>\n          <CardContent className={classes.card}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"players-simple\">Player #</InputLabel>\n              <Select value={this.state.playernumber} onChange={this.handlePlayers}>\n                {[2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} players</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"winscutoff-simple\">Maximum wins</InputLabel>\n              <Select value={this.state.winscutoff} onChange={this.handleCutoff}>\n                {[0, 1, 2, 3, 4, 5, 6, 7].map(d => (<MenuItem key={d} value={d}>{d} wins</MenuItem>))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-multiple-chip\">Must Include</InputLabel>\n              <Select\n                multiple\n                value={this.state.filters}\n                onChange={this.handleFilters}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {selected.map(value => (\n                      <Chip key={value} label={value} className={classes.chip} />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {[...countries, ...boards].map(name => (\n                  <MenuItem key={name} value={name}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Generate</Button>\n            <Button variant=\"outlined\" onClick={this.handleNext}>Next</Button>\n            <Typography variant=\"h5\" component=\"h2\">\n              {this.state.total}\n            </Typography>\n          </CardActions>\n        </Card>\n        <div className={classes.result}>\n          <p>Using the generator: TL;DR - Select the number of players and press \"generate\".</p>\n          <h3>Maximum Wins</h3>\n          <p>The generator uses the [board, country] combinations that have zero recorded wins to generate a game.</p>\n          <p>However, those choices are not always enough to generate a game. Thus, if you can't generate a game, you can use this dropdown to also include combinations with more than 0 recorded wins.</p>\n          <h3>Must Include</h3>\n          <p>Use this dropdown to select boards and/or countries that you absolutely want in the results (e.g. if a player wants to play a specific country)</p>\n          <h3>Next</h3>\n          <p>The generator will inform you of how many combinations it has generated. If you don't like a particular combination, use the next button to see the next one.</p>\n        </div>\n        <Paper className={classes.result}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Board</TableCell>\n                <TableCell>Country</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.game.map(c => (\n                <TableRow key={c[0] + c[1]}>\n                  <TableCell>{c[0]}</TableCell>\n                  <TableCell>{c[1]}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nGenerator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Generator);\n","import data from './plays.json';\n\n/*\n * Returns the distinct elements of an array.\n */\nconst unique = col => [...new Set(col)];\n\n/*\n * Flattens an array.\n */\nconst flatten = col => [].concat.apply([], col);\n\n/*\n * Creates a flat array of the distinct elements identified by function f.\n * Useful for extracting collections of elements from the data.\n * If series length < 4, chartist has an issue with that.\n */\nconst collection = f => {\n  let temp = unique(flatten(data.filter(f).map(f)));\n  let l = temp.length;\n  \n  if (l < 4) {\n    return [...temp, ...Array(4 - l).fill(\"\")];\n  } else {\n    return temp;\n  }\n}\n\n/*\n * Returns an array from the least amount to the maximum.\n * e.g. discrete([13, 18]) => [13, 14, 15, 16, 17, 18]\n */\nconst discrete = data => {\n  let distinct = [...new Set(data)].sort();\n  let low = distinct[0];\n  let high = distinct.slice(-1);\n  return Array(high - low + 1).fill(low).map((d, i) => d + i);\n};\n\n/*\n * Returns an array containing the relative frequency of cols.\n */\nconst relativeFrequency = cols => data => cols.map(x => data.filter(y => x === y).length);\n\n/*\n * Returns an array containing the absolute frequency of cols.\n */\nconst absoluteFrequency = cols => data => relativeFrequency(cols)(data).map(x => x / data.length);\n\n/*\n * percentile([1,2,3,4]) = [ 25, 33.333333333333336, 50, 100 ]\n */\nconst percentile = col => {\n  let l = col.length;\n  let modifier = x => x / l * 100;\n  return Array(l).fill(1).map((x, i) => modifier(x + i));\n}\n\nexport default {\n  unique,\n  countries: collection(d => d.country).sort(),\n  players: collection(d => d.winner),\n  boards: collection(d => d.board),\n  objectives: collection(d => d.objectives).sort(),\n  data,\n  rounds: discrete(collection(d => d.rounds)),\n  points: discrete(collection(d => d.points)),\n  passives: collection(d => d.passive),\n  aggressives: collection(d => d.aggressive),\n  resolutions: collection(d => d.resolution),\n  relativeFrequency,\n  absoluteFrequency,\n  percentile\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { Route, Link } from \"react-router-dom\";\nimport AverageWinningPoints from './components/averageWinningPoints';\nimport WinsByBoard from './components/winsByBoard';\nimport WinsByCombination from './components/winsByCombination';\nimport WinsByCombination2 from './components/winsByCombination2';\nimport WinsByCountry from './components/winsByCountry';\nimport WinsByObjectives from './components/winsByObjectives';\nimport WinsByRounds from './components/winsByRounds';\nimport WinsByPlayer from './components/winsByPlayer';\nimport WinsByStars from './components/winsByStars';\nimport CountryFrequency from './components/countryFrequency';\nimport BoardFrequency from './components/boardFrequency';\nimport Sweetspot from './components/sweetspot';\nimport Resolution from './components/resolution';\nimport Passive from './components/passive';\nimport Aggressive from './components/aggressive';\nimport Generator from './components/generator';\nimport common from './analysis';\n\nconst {countries, boards} = common;\n\nconst wins = [{\n  'text': 'Wins by player',\n  'path': '/scythe/',\n  'component': () => <WinsByPlayer {...common} />\n}, {\n  'text': 'Average winning points',\n  'path': '/scythe/average/',\n  'component': () => <AverageWinningPoints {...common} />\n}, {\n  'text': 'Player sweetspot',\n  'path': '/scythe/sweetspot/',\n  'component': () => <Sweetspot {...common} />\n}, {\n  'text': 'Wins by country',\n  'path': '/scythe/country/',\n  'component': () => <WinsByCountry {...common} />\n}, {\n  'text': 'Wins by objectives',\n  'path': '/scythe/objectives/',\n  'component': () => <WinsByObjectives {...common} />\n}, {\n  'text': 'Wins by rounds',\n  'path': '/scythe/rounds/',\n  'component': () => <WinsByRounds {...common} />\n}, {\n  'text': 'Wins by board',\n  'path': '/scythe/board/',\n  'component': () => <WinsByBoard {...common} />\n}, {\n  'text': 'Wins by stars',\n  'path': '/scythe/stars/',\n  'component': () => <WinsByStars {...common} />\n}];\n\nconst frequencies = [{\n  'text': 'Country frequency',\n  'path': '/scythe/country/frequency/',\n  'component': () => <CountryFrequency {...common} />\n}, {\n  'text': 'Board frequency',\n  'path': '/scythe/board/frequency/',\n  'component': () => <BoardFrequency {...common} />\n}];\n\nconst windgambit = [{\n  'text': 'Resolution tiles',\n  'path': '/scythe/resolution/',\n  'component': () => <Resolution {...common} />\n}, {\n  'text': 'Aggressive tiles',\n  'path': '/scythe/windgambit/aggressive/',\n  'component': () => <Aggressive {...common} />\n}, {\n  'text': 'Passive tiles',\n  'path': '/scythe/windgambit/passive/',\n  'component': () => <Passive {...common} />\n}];\n\nconst generator = [{\n  'text': 'Generator',\n  'path': '/scythe/generator/',\n  'component': () => <Generator {...common} />\n}];\n\nconst countryCombination = countries.map(c => {\n  const Country = WinsByCombination(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/scythe/' + c + '/',\n    'component': () => <Country {...common} />\n  };\n});\n\nconst boardCombination = boards.map(c => {\n  const Board = WinsByCombination2(c);\n\n  return {\n    'text': 'Wins by ' + c,\n    'path': '/scythe/' + c + '/',\n    'component': () => <Board {...common} />\n  };\n});\n\nclass Links extends React.Component {\n  state = {\n    open: this.props.open || false\n  };\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const {title, charts} = this.props;\n\n    return (\n      <List\n        component=\"nav\"\n        subheader={\n          <ListItem onClick={this.handleClick} button>\n            <ListItemText secondary={<b>{title}</b>} />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n        }\n      >\n      <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n        {charts.map(({path, text}) => (\n          <Link key={path} to={path} style={{ textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </Collapse>\n      </List>\n    );\n  };\n};\n\nconst ChartLinks = () => (\n  <div>\n    <Links charts={wins} title={\"General Stats\"} key={\"Wins\"} open={true} />\n    <Divider />\n    <Links charts={windgambit} title={\"Wind Gambit\"} key={\"Wind Gambit\"} />\n    <Divider />\n    <Links charts={frequencies} title={\"Frequencies\"} key={\"Frequencies\"} />\n    <Divider />\n    <Links charts={countryCombination} title={\"Country Combinations\"} key={\"Country combinations\"} />\n    <Divider />\n    <Links charts={boardCombination} title={\"Board Combinations\"} key={\"Board combinations\"} />\n    <Divider />\n    <Links charts={generator} title={\"Tools\"} key={\"Generator\"} />\n  </div>\n);\n\nconst ChartContent = () => (\n  [...wins, ...frequencies, ...windgambit, ...countryCombination, ...boardCombination, ...generator].map(({path, component}) => (\n    <Route key={path} path={path} exact component={component} />\n  ))\n);\n\nexport {ChartContent, ChartLinks};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ChartLinks, ChartContent} from './Charts';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass PersistentDrawerLeft extends React.Component {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Scythe Stats\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={this.handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n            <Divider />\n            <ChartLinks />\n          </Drawer>\n          <main\n            className={classNames(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n            <ChartContent />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}